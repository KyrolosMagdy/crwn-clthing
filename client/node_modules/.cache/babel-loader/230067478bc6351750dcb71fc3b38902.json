{"ast":null,"code":"import _objectSpread from \"E:\\\\javascript\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\javascript\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\javascript\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.coponents.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst Signup = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: '',\n    displayName: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userData = _useState2[0],\n        setUserData = _useState2[1];\n\n  const displayName = userData.displayName,\n        password = userData.password,\n        confirmPassword = userData.confirmPassword,\n        email = userData.email;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passowrds don't match\");\n      return;\n    }\n\n    ;\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserData(_objectSpread({}, userData, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" I don't have an account \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Sign up with your email and password \"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Passowrd\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" SIGN UP \")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["E:\\javascript\\crwn-clothing\\src\\components\\sign-up\\sign-up.coponents.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","Signup","email","password","displayName","confirmPassword","userData","setUserData","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst Signup = ({ signUpStart }) => {\r\n\t\r\n\tconst [userData, setUserData ] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tdisplayName: '',\r\n\t\tconfirmPassword: ''\r\n\t})\r\n\r\n\tconst {displayName, password, confirmPassword, email} = userData;\r\n\r\n\tconst handleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tif(password !== confirmPassword){\r\n\t\t\talert(`Passowrds don't match`);\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\t\tsignUpStart({ email, password, displayName });\r\n\t};\r\n\r\n\tconst handleChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetUserData({ ...userData, [name]: value})\r\n\t};\r\n\r\n\treturn(\r\n\t\t<div className='sign-up'> \r\n\t\t\t<h2 className='title'> I don't have an account </h2>\r\n\t\t\t<span> Sign up with your email and password </span>\r\n\t\t\t<form className='sign-up-form' onSubmit={handleSubmit}> \r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='displayName'\r\n\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Display Name'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Passowrd'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='confirmPassword'\r\n\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Confirm Password'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomButton type='submit'> SIGN UP </CustomButton>\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tsignUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup) ;"]},"metadata":{},"sourceType":"module"}