{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I 'm fired\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n  /*collectionRef.get().then( async snapshot => {\r\n  \tconst collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n  \tdispatch(fetchCollectionsSuccess(collectionMap));\r\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)))*/\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["E:\\javascript\\crwn-clothing\\src\\redux\\shop\\shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,OAAO,UAAUC,qBAAV,GAAiC;AACvC,QAAMC,OAAO,CAACC,GAAR,cAAN;;AACA,MAAI;AACH,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAhC;AACA,UAAMX,GAAG,CAACG,uBAAuB,CAACU,aAAD,CAAxB,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMd,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AAGA;;;;;AAID;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMlB,SAAS,CAACO,eAAe,CAACY,uBAAjB,EAA0CX,qBAA1C,CAAf;AACA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\n\r\nexport function* fetchCollectionsAsync(){\r\n\tyield console.log(`I 'm fired`);\r\n\ttry {\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tconst snapshot = yield collectionRef.get();\r\n\t\tconst collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n\t\tyield put(fetchCollectionsSuccess(collectionMap))\r\n\t} catch (error) {\r\n\t\tyield put(fetchCollectionsFailure(error.message))\r\n\t}\r\n\t\r\n\r\n\t\t/*collectionRef.get().then( async snapshot => {\r\n\t\t\tconst collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tdispatch(fetchCollectionsSuccess(collectionMap));\r\n\t\t}).catch(error => dispatch(fetchCollectionsFailure(error.message)))*/\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\r\n}"]},"metadata":{},"sourceType":"module"}