{"ast":null,"code":"import _objectSpread from \"E:\\\\javascript\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyB5NeTMh3oebBP9cReNm7flLt-xWt7t9LE\",\n  authDomain: \"crwn-clothing-db-aaa6b.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-db-aaa6b.firebaseio.com\",\n  projectId: \"crwn-clothing-db-aaa6b\",\n  storageBucket: \"\",\n  messagingSenderId: \"379506059916\",\n  appId: \"1:379506059916:web:61f718b7875bec7f\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const collectionRef = firestore.collection('users');\n  const snapShot = await userRef.get();\n  const collectionSnpashot = await collectionRef.get();\n  console.log({\n    collectionSnpashot\n  });\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAT = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAT\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:\\javascript\\crwn-clothing\\src\\firebase\\firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnpashot","console","log","exists","displayName","email","createdAT","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,wCAFD;AAGXC,EAAAA,WAAW,EAAE,+CAHF;AAIXC,EAAAA,SAAS,EAAE,wBAJA;AAKXC,EAAAA,aAAa,EAAE,EALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC5E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AAGA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;;AAEA,MAAG,CAACF,QAAQ,CAACK,MAAb,EAAoB;AAAA,UACXC,WADW,GACYd,QADZ,CACXc,WADW;AAAA,UACEC,KADF,GACYf,QADZ,CACEe,KADF;AAEnB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACH,YAAMf,OAAO,CAACgB,GAAR;AACLJ,QAAAA,WADK;AAELC,QAAAA,KAFK;AAGLC,QAAAA;AAHK,SAIFf,cAJE,EAAN;AAMA,KAPD,CAOE,OAAOkB,KAAP,EAAa;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACA;AACD;;AAED,SAAOlB,OAAP;AACA,CA3BM;AA6BPZ,QAAQ,CAAC+B,aAAT,CAAuB9B,MAAvB;AAEA,OAAO,MAAM+B,IAAI,GAAGhC,QAAQ,CAACgC,IAAT,EAAb;AACP,OAAO,MAAMnB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMoB,QAAQ,GAAG,IAAIjC,QAAQ,CAACgC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAejC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB5NeTMh3oebBP9cReNm7flLt-xWt7t9LE\",\r\n    authDomain: \"crwn-clothing-db-aaa6b.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-clothing-db-aaa6b.firebaseio.com\",\r\n    projectId: \"crwn-clothing-db-aaa6b\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"379506059916\",\r\n    appId: \"1:379506059916:web:61f718b7875bec7f\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif(!userAuth) return;\r\n\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\tconst collectionRef = firestore.collection('users');\r\n\r\n\r\n\tconst snapShot = await userRef.get();\r\n\tconst collectionSnpashot = await collectionRef.get();\r\n\tconsole.log({collectionSnpashot}) ;\r\n\r\n\tif(!snapShot.exists){\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAT = new Date();\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAT,\r\n\t\t\t\t...additionalData\r\n\t\t\t})\r\n\t\t} catch (error){\r\n\t\t\tconsole.log('error creating user', error.message);\r\n\t\t}\r\n\t}\r\n\r\n\treturn userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}