{"ast":null,"code":"import _objectSpread from \"E:\\\\javascript\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuthenticated() {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["E:\\javascript\\crwn-clothing\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","getSnapShotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","signInWithPopup","user","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,oBAA1C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,EAICC,cAJD,QAKO,+BALP;AAOA,SACCC,aADD,EAECC,aAFD,QAGO,gBAHP;AAKA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAClD,MAAG;AACF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BK,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAAEQ,aAAa;AACvBO,MAAAA,EAAE,EAAEF,YAAY,CAACE;AADM,OAEpBF,YAAY,CAACG,IAAb,EAFoB,EAAf,CAAT;AAIA,GAPD,CAOC,OAAMC,KAAN,EAAa;AACb,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AAAA,iBACY,MAAMf,IAAI,CAACgB,eAAL,CAAqBf,cAArB,CADlB;AAAA,UACIgB,IADJ,QACIA,IADJ;;AAEH,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AACA,GAHD,CAGC,OAAMJ,KAAN,EAAa;AACb,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUI,mBAAV,GAAgC,CAEtC;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAuCL,gBAAvC,CAAhB;AACA;AAAA;AAED,OAAO,UAAUM,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAyD;AAC/D,MAAG;AAAA,kBACa,MAAMxB,IAAI,CAACyB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADnB;AAAA,UACKP,IADL,SACKA,IADL;;AAEF,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AACA,GAHD,CAGC,OAAMJ,KAAN,EAAa;AACb,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUY,kBAAV,GAAgC;AACtC,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,mBAAjB,EAAsCN,eAAtC,CAAhB;AACA;AAED,OAAO,UAAUO,kBAAV,GAA+B;AACrC,QAAMjC,UAAU,CAACI,eAAe,CAAC8B,kBAAjB,EAAqCX,mBAArC,CAAhB;AACA;AAED,OAAO,UAAUY,SAAV,GAAsB;AAC5B,QAAMjC,GAAG,CAAC,CACTC,IAAI,CAACqB,mBAAD,CADK,EAETrB,IAAI,CAAC4B,kBAAD,CAFK,CAAD,CAAT;AAIA;AAAA","sourcesContent":["import { takeLatest, put, all, call} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { \r\n\tauth, \r\n\tgoogleProvider, \r\n\tcreateUserProfileDocument,\r\n\tgetCurrentUser \r\n} from '../../firebase/firebase.utils';\r\n\r\nimport { \r\n\tsignInSuccess, \r\n\tsignInFailure\r\n} from './user.actions';\r\n\r\nexport function* getSnapShotFromUserAuth(userAuth) {\r\n\ttry{\r\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put (signInSuccess({\r\n\t\t\tid: userSnapshot.id,\r\n\t\t\t...userSnapshot.data()\r\n\t\t}));\r\n\t}catch(error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\t\t\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst {user} = yield auth.signInWithPopup(googleProvider);\r\n\t\tyield getSnapShotFromUserAuth(user);\r\n\t}catch(error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n\t\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n};\r\n\r\nexport function* signInWithEmail({payload: {email, password} }) {\r\n\ttry{\r\n\t\tconst {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n\t\tyield getSnapShotFromUserAuth(user);\r\n\t}catch(error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* onEmailSignInStart () {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([\r\n\t\tcall(onGoogleSignInStart),\r\n\t\tcall(onEmailSignInStart)\r\n\t])\r\n};\r\n"]},"metadata":{},"sourceType":"module"}