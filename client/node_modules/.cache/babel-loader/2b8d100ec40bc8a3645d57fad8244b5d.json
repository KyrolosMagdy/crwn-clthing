{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionOverviewWithSpiner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/crwn-clothing-db-aaa6b/databases/(default)/documents/collections').then(res => res.json()).then(collections => console.log(collections));\n    /*collectionRef.get().then( async snapshot => {\r\n    \tconst collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n    \tupdateCollections(collectionMap);\r\n    \tthis.setState({loading: false})\r\n    })*/\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpiner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:\\javascript\\crwn-clothing\\src\\pages\\shop\\shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","updateCollections","withSpinner","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpiner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","res","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAuB,sDAAvB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,MAAMC,4BAA4B,GAAGH,WAAW,CAACH,mBAAD,CAAhD;AACA,MAAMO,yBAAyB,GAAGJ,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACPC,MAAAA,OAAO,EAAE;AADF,KAD8B;AAAA,SAKtCC,uBALsC,GAKZ,IALY;AAAA;;AAOtCC,EAAAA,iBAAiB,GAAE;AAAA,UACVX,iBADU,GACY,KAAKY,KADjB,CACVZ,iBADU;AAElB,UAAMa,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,+GAAD,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAEOG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFtB;AAGA;;;;;AAKA;;AAEDG,EAAAA,MAAM,GAAE;AAAA,UACCC,KADD,GACW,KAAKX,KADhB,CACCW,KADD;AAAA,UAECd,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAIP,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AACO,MAAA,IAAI,YAAKc,KAAK,CAACC,IAAX,CADX;AAEC,MAAA,MAAM,EAAGZ,KAAD,IAAW,oBAAC,4BAAD;AAA8B,QAAA,SAAS,EAAEH;AAAzC,SAAsDG,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAKC,oBAAC,KAAD;AACC,MAAA,IAAI,YAAKW,KAAK,CAACC,IAAX,mBADL;AAEC,MAAA,MAAM,EAAKZ,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAIH;AAAxC,SAAqDG,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,CADD;AAYA;;AArCqC;;AAuCvC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACvC1B,EAAAA,iBAAiB,EAAE2B,cAAc,IAAID,QAAQ,CAAC1B,iBAAiB,CAAC2B,cAAD,CAAlB;AADN,CAAL,CAAnC;;AAMA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from 'react' ; \r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\nimport withSpinner from'../../components/with-spinner/with-spinner.component';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nconst CollectionOverviewWithSpiner = withSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n\tstate = {\r\n\t\tloading: true\r\n\t}\r\n\r\n\tunsubscribeFromSnapshot = null ;\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst { updateCollections } = this.props;\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\r\n\t\tfetch('https://firestore.googleapis.com/v1/projects/crwn-clothing-db-aaa6b/databases/(default)/documents/collections')\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(collections => console.log(collections))\r\n\t\t/*collectionRef.get().then( async snapshot => {\r\n\t\t\tconst collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tupdateCollections(collectionMap);\r\n\t\t\tthis.setState({loading: false})\r\n\t\t})*/\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { match } = this.props;\r\n\t\tconst { loading } = this.state;\r\n\r\n\t\treturn(\r\n\t\t\t<div className='shop-page'> \r\n\t\t\t\t<Route \r\n\t\t\t\t\texact path={`${match.path}`} \r\n\t\t\t\t\trender={(props) => <CollectionOverviewWithSpiner isLoading={loading} {...props}/>} \r\n\t\t\t\t/>\r\n\t\t\t\t<Route \r\n\t\t\t\t\tpath={`${match.path}/:collectionId`} \r\n\t\t\t\t\trender = {(props) => <CollectionPageWithSpinner isLoading = {loading} {...props} />}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\t\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage) ;"]},"metadata":{},"sourceType":"module"}