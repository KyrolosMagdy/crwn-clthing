{"ast":null,"code":"import _objectSpread from \"E:\\\\javascript\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyB5NeTMh3oebBP9cReNm7flLt-xWt7t9LE\",\n  authDomain: \"crwn-clothing-db-aaa6b.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-db-aaa6b.firebaseio.com\",\n  projectId: \"crwn-clothing-db-aaa6b\",\n  storageBucket: \"\",\n  messagingSenderId: \"379506059916\",\n  appId: \"1:379506059916:web:61f718b7875bec7f\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAT = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAT\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((acc, collection) => {\n    acc[collection.title.toLowerCase()] = collection;\n    return acc;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["E:\\javascript\\crwn-clothing\\src\\firebase\\firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAT","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","acc","initializeApp","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB5NeTMh3oebBP9cReNm7flLt-xWt7t9LE\",\r\n    authDomain: \"crwn-clothing-db-aaa6b.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-clothing-db-aaa6b.firebaseio.com\",\r\n    projectId: \"crwn-clothing-db-aaa6b\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"379506059916\",\r\n    appId: \"1:379506059916:web:61f718b7875bec7f\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif(!userAuth) return;\r\n\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n\r\n\tconst snapShot = await userRef.get();\r\n\t\r\n\r\n\tif(!snapShot.exists){\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAT = new Date();\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAT,\r\n\t\t\t\t...additionalData\r\n\t\t\t})\r\n\t\t} catch (error){\r\n\t\t\tconsole.log('error creating user', error.message);\r\n\t\t}\r\n\t}\r\n\r\n\treturn userRef;\r\n};\r\n\r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n\tconst collectionRef = firestore.collection(collectionKey);\r\n\r\n\tconst batch = firestore.batch();\r\n\tobjectsToAdd.forEach(obj => {\r\n\t\tconst newDocRef = collectionRef.doc();\r\n\t\tbatch.set(newDocRef, obj);\r\n\t});\r\n\treturn await batch.commit()\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n\tconst transformedCollection = collections.docs.map(doc => {\r\n\t\tconst { title, items } = doc.data();\r\n\r\n\t\treturn{\r\n\t\t\trouteName: encodeURI(title.toLowerCase()),\r\n\t\t\tid: doc.id,\r\n\t\t\ttitle, \r\n\t\t\titems\r\n\t\t}\r\n\t});\r\n\treturn transformedCollection.reduce((acc, collection) => {\r\n\t\tacc[collection.title.toLowerCase()] = collection;\r\n\t\treturn acc;\r\n\t}, {})\r\n}\r\n\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}