{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.types';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I 'm fired\");\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(async snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["E:\\javascript\\crwn-clothing\\src\\redux\\shop\\shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,cAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,OAAO,UAAUC,qBAAV,GAAiC;AACvC,QAAMC,OAAO,CAACC,GAAR,cAAN;AACA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAECD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0B,MAAMC,QAAN,IAAkB;AAC3C,UAAMC,aAAa,GAAGZ,+BAA+B,CAACW,QAAD,CAArD;AACAE,IAAAA,QAAQ,CAACZ,uBAAuB,CAACW,aAAD,CAAxB,CAAR;AACA,GAHD,EAGGE,KAHH,CAGSC,KAAK,IAAIF,QAAQ,CAACX,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAID;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMnB,SAAS,CAACK,eAAe,CAACe,uBAAjB,EAA0Cd,qBAA1C,CAAf;AACA","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.types';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\n\r\nexport function* fetchCollectionsAsync(){\r\n\tyield console.log(`I 'm fired`);\r\n\tconst collectionRef = firestore.collection('collections');\r\n\r\n\t\tcollectionRef.get().then( async snapshot => {\r\n\t\t\tconst collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tdispatch(fetchCollectionsSuccess(collectionMap));\r\n\t\t}).catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\r\n}"]},"metadata":{},"sourceType":"module"}