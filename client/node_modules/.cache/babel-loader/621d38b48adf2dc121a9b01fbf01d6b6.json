{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\crwn-clothing\\\\src\\\\components\\\\collection-item\\\\collection-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { addItem } from '../../redux/cart/cart.actions';\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({\n  item,\n  addItem\n}) => {\n  const id = item.id,\n        name = item.name,\n        imageUrl = item.imageUrl,\n        price = item.price;\n  return React.createElement(\"div\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: \"url(\".concat(imageUrl, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" \", name, \" \"), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \" \", price, \" \")), React.createElement(CustomButton, {\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" Add To Cart \"));\n};\n\nconst mapDispatchTOProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchTOProps)(CollectionItem);","map":{"version":3,"sources":["E:\\javascript\\crwn-clothing\\src\\components\\collection-item\\collection-item.component.jsx"],"names":["React","connect","CustomButton","addItem","CollectionItem","item","id","name","imageUrl","price","backgroundImage","mapDispatchTOProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAEA,OAAO,+BAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOF,EAAAA;AAAP,CAAD,KAAqB;AAAA,QACpCG,EADoC,GACPD,IADO,CACpCC,EADoC;AAAA,QAChCC,IADgC,GACPF,IADO,CAChCE,IADgC;AAAA,QAC1BC,QAD0B,GACPH,IADO,CAC1BG,QAD0B;AAAA,QAChBC,KADgB,GACPJ,IADO,CAChBI,KADgB;AAE3C,SACC;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,SAAS,EAAC,OADX;AAEC,IAAA,KAAK,EAAI;AACRC,MAAAA,eAAe,gBAASF,QAAT;AADP,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAOC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0BD,IAA1B,MADD,EAEC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0BE,KAA1B,MAFD,CAPD,EAWC,oBAAC,YAAD;AAAc,IAAA,QAAQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXD,CADD;AAeA,CAjBD;;AAmBA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACvCT,EAAAA,OAAO,EAAEE,IAAI,IAAIO,QAAQ,CAACT,OAAO,CAACE,IAAD,CAAR;AADc,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCP,cAAlC,CAAf","sourcesContent":["import React from 'react' ;\r\nimport { connect } from 'react-redux'; \r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nimport './collection-item.styles.scss';\r\n\r\nconst CollectionItem = ({item, addItem}) => {\r\n\tconst {id, name, imageUrl, price} = item;\r\n\treturn(\r\n\t\t<div className= 'collection-item' > \r\n\t\t\t<div \r\n\t\t\t\tclassName='image'\r\n\t\t\t\tstyle = {{\r\n\t\t\t\t\tbackgroundImage: `url(${imageUrl})`\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className='collection-footer'> \r\n\t\t\t\t<span className='name' > {name} </span>\r\n\t\t\t\t<span className='price'> {price} </span>\r\n\t\t\t</div>\r\n\t\t\t<CustomButton inverted> Add To Cart </CustomButton>\r\n\t\t</div>\r\n\t)\r\n}\t\r\n\r\nconst mapDispatchTOProps = dispatch => ({\r\n\taddItem: item => dispatch(addItem(item))\r\n})\r\n\r\nexport default connect(null ,mapDispatchTOProps)(CollectionItem);"]},"metadata":{},"sourceType":"module"}