{"ast":null,"code":"import _objectSpread from \"E:\\\\javascript\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess(_objectSpread({\n    id: userSnapshot.id\n  }, userSnapshot.data())));\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["E:\\javascript\\crwn-clothing\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","getSnapShotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","user","error","message","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","err","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,oBAA1C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,SACCC,aADD,EAECC,aAFD,QAGO,gBAHP;AAKA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAClD,QAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BI,QAA5B,CAA1B;AACC,QAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,QAAMb,GAAG,CAAEO,aAAa;AACvBO,IAAAA,EAAE,EAAEF,YAAY,CAACE;AADM,KAEpBF,YAAY,CAACG,IAAb,EAFoB,EAAf,CAAT;AAID;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AAAA,iBACY,MAAMZ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CADlB;AAAA,UACIa,IADJ,QACIA,IADJ;AAIH,GAJD,CAIC,OAAMC,KAAN,EAAa;AACb,UAAMnB,GAAG,CAACQ,aAAa,CAACW,KAAK,CAACC,OAAP,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMtB,UAAU,CAACI,eAAe,CAACmB,oBAAjB,EAAuCN,gBAAvC,CAAhB;AACA;AAAA;AAED,OAAO,UAAUO,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAyD;AAC/D,MAAG;AAAA,kBACa,MAAMtB,IAAI,CAACuB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADnB;AAAA,UACKR,IADL,SACKA,IADL;;AAGF,UAAMP,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BY,IAA5B,CAA1B;AACA,UAAMN,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAAEO,aAAa;AACvBO,MAAAA,EAAE,EAAEF,YAAY,CAACE;AADM,OAEpBF,YAAY,CAACG,IAAb,EAFoB,EAAf,CAAT;AAIA,GATD,CASC,OAAMa,GAAN,EAAW;AACX,UAAM5B,GAAG,CAACQ,aAAa,CAACoB,GAAG,CAACR,OAAL,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUS,kBAAV,GAAgC;AACtC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCP,eAAtC,CAAhB;AACA;AAED,OAAO,UAAUQ,SAAV,GAAsB;AAC5B,QAAM9B,GAAG,CAAC,CACTC,IAAI,CAACmB,mBAAD,CADK,EAETnB,IAAI,CAAC2B,kBAAD,CAFK,CAAD,CAAT;AAIA;AAAA","sourcesContent":["import { takeLatest, put, all, call} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nimport { \r\n\tsignInSuccess, \r\n\tsignInFailure\r\n} from './user.actions';\r\n\r\nexport function* getSnapShotFromUserAuth(userAuth) {\r\n\tconst userRef = yield call(createUserProfileDocument, userAuth);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put (signInSuccess({\r\n\t\t\tid: userSnapshot.id,\r\n\t\t\t...userSnapshot.data()\r\n\t\t}));\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst {user} = yield auth.signInWithPopup(googleProvider);\r\n\t\t\r\n\r\n\t}catch(error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n};\r\n\r\nexport function* signInWithEmail({payload: {email, password} }) {\r\n\ttry{\r\n\t\tconst {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n\r\n\t\tconst userRef = yield call(createUserProfileDocument, user);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put (signInSuccess({\r\n\t\t\tid: userSnapshot.id,\r\n\t\t\t...userSnapshot.data()\r\n\t\t}));\r\n\t}catch(err) {\r\n\t\tyield put(signInFailure(err.message));\r\n\t}\r\n}\r\n\r\nexport function* onEmailSignInStart () {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([\r\n\t\tcall(onGoogleSignInStart),\r\n\t\tcall(onEmailSignInStart)\r\n\t])\r\n};"]},"metadata":{},"sourceType":"module"}